export const DEFAULT_DATA = {
  distinctType: 0, // 去重方式：0=不去重；1=全局去重；2=活动内去重；
  unfriendDeduction: 0, // 解除好友关系是否扣减好友数：0=不扣减；1扣减
  validIntervalTimeOfStatistical: 0, // 统计的有效间隔时间(统计时效)：0=立即生效；>0 =间隔该时间后生效
  repeatParticipation: 0 // 是否允许重复参与：0=允许；1=不允许
}
export const ANALYSIS_DATE = {
  DISTINC_TYPE: {
    0: '活动外已添加过企业内员工为好友（无论是否还保持），则通过裂变大师添加好友不计入裂变好友数。',
    1: '活动内添加多名员工为好友时，数据去重，不计入好友数据。',
    2: '活动内用户添加员工为好友，即计入裂变数据。'
  },
  UNFRIEND_DEDUCTION: {
    0: '活动有效期内，解除好友关系时，不扣减裂变好友数。',
    1: '活动有效期内，解除好友关系时，扣减裂变好友数。'
  },
  VALID_INTERVAL_TIME_OF_STATISTICAL (num) {
    return num === 0 ? '添加好友后立即计入裂变好友数。' : `好友关系保持${num}小时后计入裂变好友数。`
  },
  REPEACT_PARTICIPATION: {
    0: '单个活动内，允许成为多名员工的裂变大师。',
    1: '单个活动内，不允许成为多名员工的裂变大师。'
  }
}
export const EDIT_DATA = {
  DEDUP_WAY: {
    0: {
      text: '若在该活动外已添加过企业内员工为好友（无论是否还保持），则通过裂变大师添加好友不计入裂变好友数',
      tip: '消费者张三与员工小A已是好友，张三通过裂变大师活动又添加员工小B为好友，张三不会记录为员工小B的新好友数'
    },
    1: {
      text: '单个活动内添加多名员工为好友时（不论与之前员工是否还保留好友关系），数据去重，不再计入裂变数据',
      tip: '消费者张三通过裂变活动1与员工小A成为好友，张三又通过同一个裂变活动1与员工小B成为好友，张三仅记录为小A的新好友数，不会记录为小B的新好友数'
    },
    2: {
      text: '活动内用户添加员工为好友，即计入裂变数据',
      tip: '消费者张三通过裂变大师活动添加员工小A和小B为好友，即记录为小A的好友数同时也记录为小B的好友数'
    }
  }
}
